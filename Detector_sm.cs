/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : Detector.sm
 */

using System;

[System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]
public sealed class DetectorContext :
    statemap.FSMContext
{
//---------------------------------------------------------------
// Properties.
//

    public DetectorState State
    {
        get
        {
            if (state_ == null)
            {
                throw(
                    new statemap.StateUndefinedException());
            }

            return ((DetectorState) state_);
        }
        set
        {
            SetState(value);
        }
    }

    public Detector Owner
    {
        get
        {
            return (_owner);
        }
        set
        {
            _owner = value;
        }
    }

//---------------------------------------------------------------
// Member methods.
//

    public DetectorContext(Detector owner) :
        base (MainMap.Start)
    {
        _owner = owner;
    }

    public override void EnterStartState()
    {
        State.Entry(this);
        return;
    }

    public void AlfaInput()
    {
        transition_ = "AlfaInput";
        State.AlfaInput(this);
        transition_ = "";
        return;
    }

    public void DefaultInput()
    {
        transition_ = "DefaultInput";
        State.DefaultInput(this);
        transition_ = "";
        return;
    }

    public void DigitInput()
    {
        transition_ = "DigitInput";
        State.DigitInput(this);
        transition_ = "";
        return;
    }

    public void EndStringInput()
    {
        transition_ = "EndStringInput";
        State.EndStringInput(this);
        transition_ = "";
        return;
    }

    public void SeparatorCharInput()
    {
        transition_ = "SeparatorCharInput";
        State.SeparatorCharInput(this);
        transition_ = "";
        return;
    }

    public void SpaceInput()
    {
        transition_ = "SpaceInput";
        State.SpaceInput(this);
        transition_ = "";
        return;
    }

//---------------------------------------------------------------
// Member data.
//

    [NonSerialized]
    private Detector _owner;

//---------------------------------------------------------------
// Inner classes.
//

    [System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]
    public abstract class DetectorState :
        statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        internal DetectorState(string name, int id) :
            base (name, id)
        {}

        protected internal virtual void Entry(DetectorContext context)
        {}

        protected internal virtual void Exit(DetectorContext context)
        {}

        protected internal virtual void AlfaInput(DetectorContext context)
        {
            Default(context);
        }

        protected internal virtual void DefaultInput(DetectorContext context)
        {
            Default(context);
        }

        protected internal virtual void DigitInput(DetectorContext context)
        {
            Default(context);
        }

        protected internal virtual void EndStringInput(DetectorContext context)
        {
            Default(context);
        }

        protected internal virtual void SeparatorCharInput(DetectorContext context)
        {
            Default(context);
        }

        protected internal virtual void SpaceInput(DetectorContext context)
        {
            Default(context);
        }

        protected internal virtual void Default(DetectorContext context)
        {
            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.State.Name +
                    ", Transition: " +
                    context.GetTransition()));
        }
    }
    [System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]

    internal abstract class MainMap
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Statics.
        //
        [NonSerialized]
        internal static readonly MainMap_Default.MainMap_Start Start =
            new MainMap_Default.MainMap_Start("MainMap.Start", 0);
        [NonSerialized]
        internal static readonly MainMap_Default.MainMap_Goal Goal =
            new MainMap_Default.MainMap_Goal("MainMap.Goal", 1);
        [NonSerialized]
        internal static readonly MainMap_Default.MainMap_GoalSeparator GoalSeparator =
            new MainMap_Default.MainMap_GoalSeparator("MainMap.GoalSeparator", 2);
        [NonSerialized]
        internal static readonly MainMap_Default.MainMap_Subgoal Subgoal =
            new MainMap_Default.MainMap_Subgoal("MainMap.Subgoal", 3);
        [NonSerialized]
        internal static readonly MainMap_Default.MainMap_Space Space =
            new MainMap_Default.MainMap_Space("MainMap.Space", 4);
        [NonSerialized]
        internal static readonly MainMap_Default.MainMap_Recieve Recieve =
            new MainMap_Default.MainMap_Recieve("MainMap.Recieve", 5);
        [NonSerialized]
        internal static readonly MainMap_Default.MainMap_Error Error =
            new MainMap_Default.MainMap_Error("MainMap.Error", 6);
        [NonSerialized]
        private static readonly MainMap_Default Default =
            new MainMap_Default("MainMap.Default", -1);

    }

    [System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]
    internal class MainMap_Default :
        DetectorState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        internal MainMap_Default(string name, int id) :
            base (name, id)
        {}

        protected internal override void DefaultInput(DetectorContext context)
        {

            context.State.Exit(context);
            context.State = MainMap.Error;
            context.State.Entry(context);


            return;
        }

        protected internal override void Default(DetectorContext context)
        {

            context.State.Exit(context);
            context.State = MainMap.Error;
            context.State.Entry(context);


            return;
        }

    //-----------------------------------------------------------
    // Inner classes.
    //

        [System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]
        internal class MainMap_Start :
            MainMap_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            internal MainMap_Start(string name, int id) :
                base (name, id)
            {}

            protected internal override void AlfaInput(DetectorContext context)
            {

                context.State.Exit(context);
                context.State = MainMap.Goal;
                context.State.Entry(context);


                return;
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]
        internal class MainMap_Goal :
            MainMap_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            internal MainMap_Goal(string name, int id) :
                base (name, id)
            {}

            protected internal override void Entry(DetectorContext context)
            {
                Detector ctxt = context.Owner;

                ctxt.IncCurrentIndex();
                return;
            }

            protected internal override void AlfaInput(DetectorContext context)
            {

                context.State.Exit(context);
                context.State = MainMap.Goal;
                context.State.Entry(context);


                return;
            }

            protected internal override void DigitInput(DetectorContext context)
            {

                context.State.Exit(context);
                context.State = MainMap.Goal;
                context.State.Entry(context);


                return;
            }

            protected internal override void SeparatorCharInput(DetectorContext context)
            {

                Detector ctxt = context.Owner;


                context.State.Exit(context);
                context.ClearState();

                try
                {
                    ctxt.SaveEndIndex();
                }
                finally
                {
                    context.State = MainMap.GoalSeparator;
                    context.State.Entry(context);
                }



                return;
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]
        internal class MainMap_GoalSeparator :
            MainMap_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            internal MainMap_GoalSeparator(string name, int id) :
                base (name, id)
            {}

            protected internal override void Entry(DetectorContext context)
            {
                Detector ctxt = context.Owner;

                ctxt.IncCurrentIndex();
                return;
            }

            protected internal override void AlfaInput(DetectorContext context)
            {

                Detector ctxt = context.Owner;


                context.State.Exit(context);
                context.ClearState();

                try
                {
                    ctxt.SaveStartIndex();
                }
                finally
                {
                    context.State = MainMap.Subgoal;
                    context.State.Entry(context);
                }



                return;
            }

            protected internal override void EndStringInput(DetectorContext context)
            {

                context.State.Exit(context);
                context.State = MainMap.Recieve;
                context.State.Entry(context);


                return;
            }

            protected internal override void SpaceInput(DetectorContext context)
            {

                context.State.Exit(context);
                context.State = MainMap.GoalSeparator;
                context.State.Entry(context);


                return;
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]
        internal class MainMap_Subgoal :
            MainMap_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            internal MainMap_Subgoal(string name, int id) :
                base (name, id)
            {}

            protected internal override void Entry(DetectorContext context)
            {
                Detector ctxt = context.Owner;

                ctxt.IncCurrentIndex();
                return;
            }

            protected internal override void AlfaInput(DetectorContext context)
            {

                context.State.Exit(context);
                context.State = MainMap.Subgoal;
                context.State.Entry(context);


                return;
            }

            protected internal override void DigitInput(DetectorContext context)
            {

                context.State.Exit(context);
                context.State = MainMap.Subgoal;
                context.State.Entry(context);


                return;
            }

            protected internal override void EndStringInput(DetectorContext context)
            {

                Detector ctxt = context.Owner;


                context.State.Exit(context);
                context.ClearState();

                try
                {
                    ctxt.SaveEndIndex();
                }
                finally
                {
                    context.State = MainMap.Recieve;
                    context.State.Entry(context);
                }



                return;
            }

            protected internal override void SpaceInput(DetectorContext context)
            {

                Detector ctxt = context.Owner;


                context.State.Exit(context);
                context.ClearState();

                try
                {
                    ctxt.SaveEndIndex();
                }
                finally
                {
                    context.State = MainMap.Space;
                    context.State.Entry(context);
                }



                return;
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]
        internal class MainMap_Space :
            MainMap_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            internal MainMap_Space(string name, int id) :
                base (name, id)
            {}

            protected internal override void Entry(DetectorContext context)
            {
                Detector ctxt = context.Owner;

                ctxt.IncCurrentIndex();
                return;
            }

            protected internal override void AlfaInput(DetectorContext context)
            {

                Detector ctxt = context.Owner;


                context.State.Exit(context);
                context.ClearState();

                try
                {
                    ctxt.SaveStartIndex();
                }
                finally
                {
                    context.State = MainMap.Subgoal;
                    context.State.Entry(context);
                }



                return;
            }

            protected internal override void EndStringInput(DetectorContext context)
            {

                context.State.Exit(context);
                context.State = MainMap.Recieve;
                context.State.Entry(context);


                return;
            }

            protected internal override void SpaceInput(DetectorContext context)
            {

                context.State.Exit(context);
                context.State = MainMap.Space;
                context.State.Entry(context);


                return;
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]
        internal class MainMap_Recieve :
            MainMap_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            internal MainMap_Recieve(string name, int id) :
                base (name, id)
            {}
        }

        [System.CodeDom.Compiler.GeneratedCode("smc"," v. 7.1.0")]
        internal class MainMap_Error :
            MainMap_Default
        {
        //-------------------------------------------------------
        // Member methods.
        //

            internal MainMap_Error(string name, int id) :
                base (name, id)
            {}
        }
    }
}


/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
